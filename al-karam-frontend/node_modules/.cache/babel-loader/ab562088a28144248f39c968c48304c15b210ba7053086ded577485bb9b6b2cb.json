{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT ALKARAM\\\\al-karam\\\\src\\\\components\\\\forget-password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style/auth.css\";\nimport logo from \".././asserts/Alkaram_logo.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    try {\n      setLoading(true);\n\n      // ðŸ”‘ Firebase resetPassword logic will be added here later\n\n      setMessage(\"Password reset email sent! Check your inbox.\");\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"auth-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-text\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePasswordReset,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Sending...\" : \"Send Reset Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Back to\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"auth-link\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"zYU2ng5zjA86blnNHaX8hXinNas=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","Link","logo","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","message","setMessage","error","setError","loading","setLoading","handlePasswordReset","e","preventDefault","err","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","to","_c","$RefreshReg$"],"sources":["D:/PROJECT ALKARAM/al-karam/src/components/forget-password.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/auth.css\";\r\nimport logo from \".././asserts/Alkaram_logo.jpg\";\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      // ðŸ”‘ Firebase resetPassword logic will be added here later\r\n\r\n      setMessage(\"Password reset email sent! Check your inbox.\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-box\">\r\n        <img src={logo} alt=\"Logo\" className=\"auth-logo\" />\r\n        <h2>Reset Password</h2>\r\n        {error && <p className=\"error-text\">{error}</p>}\r\n        {message && <p className=\"success-text\">{message}</p>}\r\n        <form onSubmit={handlePasswordReset}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? \"Sending...\" : \"Send Reset Link\"}\r\n          </button>\r\n        </form>\r\n        <p>\r\n          Back to{\" \"}\r\n          <Link to=\"/login\" className=\"auth-link\">\r\n            Login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,QAAQ,CAAC,EAAE,CAAC;IACZF,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACFI,UAAU,CAAC,IAAI,CAAC;;MAEhB;;MAEAJ,UAAU,CAAC,8CAA8C,CAAC;IAC5D,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZN,QAAQ,CAACM,GAAG,CAACT,OAAO,CAAC;IACvB,CAAC,SAAS;MACRK,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BhB,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBhB,OAAA;QAAKiB,GAAG,EAAEnB,IAAK;QAACoB,GAAG,EAAC,MAAM;QAACH,SAAS,EAAC;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDtB,OAAA;QAAAgB,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBf,KAAK,iBAAIP,OAAA;QAAGe,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAET;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9CjB,OAAO,iBAAIL,OAAA;QAAGe,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEX;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDtB,OAAA;QAAMuB,QAAQ,EAAEZ,mBAAoB;QAAAK,QAAA,gBAClChB,OAAA;UACEwB,IAAI,EAAC,OAAO;UACZC,WAAW,EAAC,0BAA0B;UACtCC,KAAK,EAAEvB,KAAM;UACbwB,QAAQ,EAAGf,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFtB,OAAA;UAAQwB,IAAI,EAAC,QAAQ;UAACM,QAAQ,EAAErB,OAAQ;UAAAO,QAAA,EACrCP,OAAO,GAAG,YAAY,GAAG;QAAiB;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPtB,OAAA;QAAAgB,QAAA,GAAG,SACM,EAAC,GAAG,eACXhB,OAAA,CAACH,IAAI;UAACkC,EAAE,EAAC,QAAQ;UAAChB,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAExC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CApDQD,cAAc;AAAA+B,EAAA,GAAd/B,cAAc;AAsDvB,eAAeA,cAAc;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}