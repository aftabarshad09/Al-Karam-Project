{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT ALKARAM\\\\al-karam-frontend\\\\src\\\\components\\\\forget-password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style/auth.css\";\nimport logo from \".././asserts/Alkaram_logo.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgotPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [status, setStatus] = useState({\n    error: \"\",\n    success: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const handlePasswordReset = async e => {\n    e.preventDefault();\n    setStatus({\n      error: \"\",\n      success: \"\"\n    });\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      setStatus({\n        error: \"Enter a valid email address.\",\n        success: \"\"\n      });\n      return;\n    }\n    try {\n      setLoading(true);\n\n      // ðŸ”‘ Firebase reset password logic will be added later\n\n      setStatus({\n        error: \"\",\n        success: \"Password reset email sent! Check your inbox.\"\n      });\n    } catch (err) {\n      setStatus({\n        error: err.message,\n        success: \"\"\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Alkaram Logo\",\n          className: \"auth-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), status.error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: status.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this), status.success && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-text\",\n          children: status.success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlePasswordReset,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter your email address\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            children: loading ? \"Sending...\" : \"Send Reset Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Back to\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"auth-link\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgotPassword, \"rLJve3J7ngXFY1OpTG9dRqO6WaU=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","Link","logo","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","status","setStatus","error","success","loading","setLoading","handlePasswordReset","e","preventDefault","test","err","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","to","_c","$RefreshReg$"],"sources":["D:/PROJECT ALKARAM/al-karam-frontend/src/components/forget-password.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style/auth.css\";\r\nimport logo from \".././asserts/Alkaram_logo.jpg\";\r\n\r\nfunction ForgotPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [status, setStatus] = useState({ error: \"\", success: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handlePasswordReset = async (e) => {\r\n    e.preventDefault();\r\n    setStatus({ error: \"\", success: \"\" });\r\n\r\n    if (!/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      setStatus({ error: \"Enter a valid email address.\", success: \"\" });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      // ðŸ”‘ Firebase reset password logic will be added later\r\n\r\n      setStatus({\r\n        error: \"\",\r\n        success: \"Password reset email sent! Check your inbox.\",\r\n      });\r\n    } catch (err) {\r\n      setStatus({ error: err.message, success: \"\" });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"auth-container\">\r\n      <div className=\"auth-box\">\r\n        <img src={logo} alt=\"Alkaram Logo\" className=\"auth-logo\" />\r\n        <h2>Reset Password</h2>\r\n        {status.error && <p className=\"error-text\">{status.error}</p>}\r\n        {status.success && <p className=\"success-text\">{status.success}</p>}\r\n        <form onSubmit={handlePasswordReset}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? \"Sending...\" : \"Send Reset Link\"}\r\n          </button>\r\n        </form>\r\n        <p>\r\n          Back to{\" \"}\r\n          <Link to=\"/login\" className=\"auth-link\">\r\n            Login\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IAAEW,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,SAAS,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IAErC,IAAI,CAAC,cAAc,CAACM,IAAI,CAACX,KAAK,CAAC,EAAE;MAC/BG,SAAS,CAAC;QAAEC,KAAK,EAAE,8BAA8B;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MACjE;IACF;IAEA,IAAI;MACFE,UAAU,CAAC,IAAI,CAAC;;MAEhB;;MAEAJ,SAAS,CAAC;QACRC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZT,SAAS,CAAC;QAAEC,KAAK,EAAEQ,GAAG,CAACC,OAAO;QAAER,OAAO,EAAE;MAAG,CAAC,CAAC;IAChD,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBlB,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC/BlB,OAAA;QAAKiB,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBlB,OAAA;UAAKmB,GAAG,EAAErB,IAAK;UAACsB,GAAG,EAAC,cAAc;UAACH,SAAS,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3DxB,OAAA;UAAAkB,QAAA,EAAI;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACtBnB,MAAM,CAACE,KAAK,iBAAIP,OAAA;UAAGiB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEb,MAAM,CAACE;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC5DnB,MAAM,CAACG,OAAO,iBAAIR,OAAA;UAAGiB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEb,MAAM,CAACG;QAAO;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnExB,OAAA;UAAMyB,QAAQ,EAAEd,mBAAoB;UAAAO,QAAA,gBAClClB,OAAA;YACE0B,IAAI,EAAC,OAAO;YACZC,WAAW,EAAC,0BAA0B;YACtCC,KAAK,EAAEzB,KAAM;YACb0B,QAAQ,EAAGjB,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFxB,OAAA;YAAQ0B,IAAI,EAAC,QAAQ;YAACM,QAAQ,EAAEvB,OAAQ;YAAAS,QAAA,EACrCT,OAAO,GAAG,YAAY,GAAG;UAAiB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACPxB,OAAA;UAAAkB,QAAA,GAAG,SACM,EAAC,GAAG,eACXlB,OAAA,CAACH,IAAI;YAACoC,EAAE,EAAC,QAAQ;YAAChB,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAExC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV;AAACtB,EAAA,CA5DQD,cAAc;AAAAiC,EAAA,GAAdjC,cAAc;AA8DvB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}